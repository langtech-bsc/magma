slurm:
  params:
    - --time=00-1:00:00
    - --gres=gpu:2
    - --ntasks=1
    - --cpus-per-task=20
    - --qos=acc_debug
    - --partition=acc
    - --nodes=1
    - --exclusive
  command:
    bash _launch.sh > logs/script.log 2>&1
    # This command will always execute during your job. It runs after initializing Jupyter, TGI, or VLLM, if they are enabled.
    # You can specify any Bash script located in the `src` directory as the entry point.
    # You may also include any additional commands, such as `echo "hello world"` or `python script.py`.
    # Note: If specifying a file, it must exist in the `src` directory of your repository.

tunnel: #SSH Tunnel
  enable: false # Default is `false`. If TGI, VLLM, or Jupyter is enabled, it will be enabled automatically.

jupyter:
  enable: true # Default false.
  singularity: python-jupyter.sif  # The singularity image must exists in $GPFS_SINGULARITY_IMAGE_REGISTRY_PATH.


tgi: # Text generation inference
  enable: false # Default false.
  model: Mistral-7B-Instruct-v0.3 # The model must exists in $GPFS_MODEL_REGISTRY_PATH.
  singularity: text-generation-inference.singularity.1.4.4.sif # The singularity image must exists in $GPFS_SINGULARITY_IMAGE_REGISTRY_PATH.
  params: # (TGI) Must be valid parameters, otherwise tgi will throw an error
    --max-input-length 8000
    --max-batch-prefill-tokens 8000
    --max-total-tokens 12000

vllm: # VLLM api
  enable: true # Default false.
  model: Mistral-7B-Instruct-v0.3 # The model must exists in $GPFS_MODEL_REGISTRY_PATH.
  singularity: vllm-inference.sif # The singularity image must exists in $GPFS_SINGULARITY_IMAGE_REGISTRY_PATH.
  params: "" # (VLM) Must be valid parameters, otherwise tgi will throw an error
             

# Enable singularity get access to custom image from $GPFS_SINGULARITY_IMAGE_REGISTRY_PATH.
# You will have access to this image through $JOB_SINGULARITY_IMAGE env variable.

singularity:
  enable: false # Default false. 
  # name: my-custom-image.sif # Default: <repo>/<branch>. For current or another <repo>/<branch> do not add .sif.
  sandbox: false # Default: false. Only needed while creating, it will save image as a sandbox if true, otherwise as a singularity.

  # Following conditions only applies if the name of singularity (name:) is equal to current <repo>/<branch> and matches the current repo, branch.
  # - If the image does not exists or is a old version , it will create new image from the dockerfile you have in your repository.
  # - If already exists, will install all requirements from requirement.txt.


finetune:
  enable: True # Default false.
  output_model_name: "demo"
  
  params:
    - --model_name_or_path $GPFS_MODELS_REGISTRY_PATH/<your model> # Set your base model here
    - --data_paths $GPFS_DATA_REGISTRY_PATH/apps/RAG_Dataset_prompts/train_ml.json # You can add multiple data paths separated by a space
    - --eval_data_paths $GPFS_DATA_REGISTRY_PATH/apps/RAG_Dataset_prompts/validation_ml.json # You can add multiple eval data paths separated by a space
    - --deepspeed ds_type3_config_autombs.json #You can find here more deepspeed config files. https://github.com/langtech-bsc/FastChat/tree/main/fastchat/deepspeed_configs
      # You can add your own deepspeed config like /path/to/deepspeed_config.json
    - --bf16 True
    - --num_train_epochs 1
    - --per_device_train_batch_size 2
    - --per_device_eval_batch_size 2
    - --gradient_accumulation_steps 4
    - --eval_strategy 'steps'
    - --eval_steps 0.25
    - --save_strategy "steps"
    - --save_steps 0.25
    - --save_total_limit 20
    - --learning_rate 2e-5
    - --weight_decay 0.
    - --warmup_ratio 0.03
    - --lr_scheduler_type 'cosine'
    - --logging_steps 1
    - --model_max_length 4096 # Change this depending on your requirements.
    - --gradient_checkpointing True
    - --lazy_preprocess True
    - --save_total_limit 1 #If you want to keep all or additional checkpoints, either comment out this parameter or increase its value as needed.
    # It will add chat template automatically
    # To add more parameters check this: https://huggingface.co/docs/transformers/v4.44.0/en/main_classes/trainer#transformers.TrainingArguments