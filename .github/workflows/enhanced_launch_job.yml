name: Enhanced Launch job

on:
  workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: magma-runner-set
      enable_tunnel:
        required: false
        type: boolean
        default: false

jobs:
  pre-job:
      runs-on: ${{inputs.runs_on}}
      outputs:
          job_name: ${{ steps.job_variables.outputs.job_name }}
          job_path: ${{ steps.job_variables.outputs.job_path }}
          exists: ${{ steps.exists.outputs.exists }}

      steps:

      - name: Get job variables
        id: job_variables
        run: |
          JOB_REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}
          JOB_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "job_name=${JOB_REPO_NAME}-${JOB_BRANCH}" >> $GITHUB_OUTPUT
          echo "job_path=${JOB_REPO_NAME}/${JOB_BRANCH}" >> $GITHUB_OUTPUT
        
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: check if job exists
        id: check_job
        uses: langtech-bsc/magma/actions/check-hpc-jobs@main
        with:
          job_name: ${{ steps.job_variables.outputs.job_name}}
          remote_user: ${{ secrets.REMOTE_USER}}
          remote_host: ${{ secrets.REMOTE_HOST}}

      - name: Job already exists
        if: ${{ steps.check_job.outputs.exists == 'true'}}
        id: exists
        run: |
            echo "The job is already running. Please note the limitation of one job per repository/branch. To proceed, you can either create another branch, cancel the current job, or wait for the job to finish."
            echo "Job already exists"
            echo "JOB IDs: ${{steps.check_job.outputs.jobs}}"
            echo "exists=true" >> $GITHUB_OUTPUT
            exit 1

      - uses: actions/checkout@v4

      - uses: actions-tools/yaml-outputs@8a3d95c649e970fbe0fb68b11e21a64a9b7bb1b0
        id: yaml
        with:
          export-env-variables: false
          file-path: './config.yaml'
          fail-on-file-not-found: false
          separator: '_'
        continue-on-error: true

      - name: Set default values if not set
        run: |
          DEFAULT_REPO_BRANCH="${{ github.repository }}/${{ github.ref_name }}"

          # Set default for tunnel.enable
          if [ -z "${{ steps.yaml.outputs.tunnel_enable }}" ]; then
            echo "tunnel_enable=false" >> $GITHUB_ENV
          else
            echo "tunnel_enable=${{ steps.yaml.outputs.tunnel_enable }}" >> $GITHUB_ENV
          fi

          # Set default for jupyter.enable
          if [ -z "${{ steps.yaml.outputs.jupyter_enable }}" ]; then
            echo "jupyter_enable=false" >> $GITHUB_ENV
          else
            echo "jupyter_enable=${{ steps.yaml.outputs.jupyter_enable }}" >> $GITHUB_ENV
          fi

          # Set default for jupyter.singularity
          if [ -z "${{ steps.yaml.outputs.jupyter_singularity }}" ]; then
            echo "jupyter_singularity=python-jupyter.sif" >> $GITHUB_ENV
          else
            echo "jupyter_singularity=${{ steps.yaml.outputs.jupyter_singularity }}" >> $GITHUB_ENV
          fi

          # Set default for tgi.enable
          if [ -z "${{ steps.yaml.outputs.tgi_enable }}" ]; then
            echo "tgi_enable=false" >> $GITHUB_ENV
          else
            echo "tgi_enable=${{ steps.yaml.outputs.tgi_enable }}" >> $GITHUB_ENV
          fi

          # Set default for tgi.singularity
          if [ -z "${{ steps.yaml.outputs.tgi_singularity }}" ]; then
            echo "tgi_singularity=text-generation-inference.singularity.1.4.4.sif" >> $GITHUB_ENV
          else
            echo "tgi_singularity=${{ steps.yaml.outputs.tgi_singularity }}" >> $GITHUB_ENV
          fi

          # Set default for tgi.model
          if [ -z "${{ steps.yaml.outputs.tgi_model }}" ]; then
            echo "tgi_model=" >> $GITHUB_ENV
          else
            echo "tgi_model=${{ steps.yaml.outputs.tgi_model }}" >> $GITHUB_ENV
          fi

          # Set default for singularity (uncomment if needed)
          if [ -z "${{ steps.yaml.outputs.singularity }}" ]; then
            echo "singularity=$DEFAULT_REPO_BRANCH" >> $GITHUB_ENV
          else
            echo "singularity=${{ steps.yaml.outputs.singularity }}" >> $GITHUB_ENV
          fi

      - name: Output configuration
        run: |
          echo "tunnel_enable=${{ env.tunnel_enable }}"
          echo "jupyter_enable=${{ env.jupyter_enable }}"
          echo "jupyter_singularity=${{ env.jupyter_singularity }}"
          echo "tgi_enable=${{ env.tgi_enable }}"
          echo "tgi_singularity=${{ env.tgi_singularity }}"
          echo "tgi_model=${{ env.tgi_model }}"
          echo "singularity=${{ env.singularity }}"
            
        
  # launch-job:
  #     needs: pre-job
  #     uses: langtech-bsc/magma/.github/workflows/launch_job.yml@main
  #     secrets: inherit
  #     with: 
  #       runs_on: ${{ inputs.runs_on }}
  #       job_path: ${{ needs.pre-job.outputs.job_path }}
  #       job_name: ${{ needs.pre-job.outputs.job_name }}
  #       enable_tunnel: ${{ inputs.enable_tunnel }}
        
