name: Docker to sandbox or singularity
description: "GitHub Action verify whether a job is running or not"
author: Ankush Raj <https://www.bsc.es/rana-ankush>

inputs:
  dir:
    required: true
    type: string
  sandbox:
    required: true
    type: string
  remote_user:
    required: false
    type: string
  remote_host:
    required: false
    type: sting

outputs:
  error:
    description: "true, if any error during installation"
    value: ${{ steps.error.outputs.exists }}

runs:
  using: "composite"
  steps:
    - name: Set globals
      id: globals
      shell: bash
      run: |
        echo "SSH_OPTIONS=-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" >> "${GITHUB_OUTPUT}"

    - name: Log names
      shell: bash
      run: |
        echo "DIR: ${{ inputs.DIR }}"
        echo "SANDBOX: ${{ inputs.sandbox }}"

    - name: Check connection
      shell: bash
      run: |
        ssh ${{ steps.globals.outputs.SSH_OPTIONS }} ${{inputs.remote_user}}@${{inputs.remote_host}} 2>/dev/null "exit"
        if [ $? -ne 0 ]; then
          echo 'SSH connection failed'
          exit 1
        fi

    - name: Check sandbox existence
      shell: bash
      run: |
        ssh ${{ steps.globals.outputs.SSH_OPTIONS }} ${{ inputs.remote_user }}@${{ inputs.remote_host }} 2>/dev/null "
          if [ -d \"${{ inputs.dir }}/${{ inputs.sandbox }}\" ]; then
            module load singularity
            if ! singularity inspect ${{ inputs.dir }}/${{ inputs.sandbox }} >/dev/null 2>&1; then
              echo 'The directory is not a Singularity sandbox'
              exit 1
            fi
          else
            echo 'The sandbox directory does not exist'
            exit 1
          fi
        "
      
    - name: Download packages
      run: |
        ssh ${{ steps.globals.outputs.SSH_OPTIONS }} ${{ inputs.remote_user }}@${{ inputs.remote_host }} 2>/dev/null "module load singularity && singularity exec --contain -w --no-home  ${{ inputs.dir }}/${{ inputs.sandbox }} pip freeze" > freeze.txt
        python ${{ github.action_path }}/get_packages_list.py --packages ./requirements.txt --installed ./freeze.txt > toinstall.txt
        pip download -r toinstall.txt -d packages
        rm  toinstall.txt freeze.txt
        

    - name: Push packages
      run: |
        tar czf - packages | ssh ${{ steps.globals.outputs.SSH_OPTIONS }} ${{ inputs.remote_user }}@${{ inputs.remote_host }} 2>/dev/null "cd ${{ inputs.dir }} && tar xzvf - packages"
        rm -rf packages

    - name: Install packages
      run: |
        ssh ${{ steps.globals.outputs.SSH_OPTIONS }} ${{ inputs.remote_user }}@${{ inputs.remote_host }} 2>/dev/null "
            module load singularity
            singularity exec --contain -w --no-home --bind ${{ inputs.dir }}/packages:packages ${{ inputs.dir }}/${{ inputs.sandbox }} pip \"exit 0\"
        fi
        "

